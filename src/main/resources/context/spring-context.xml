<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
       	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       	http://www.springframework.org/schema/mvc
       	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       	http://www.springframework.org/schema/task
       	http://www.springframework.org/schema/task/spring-task-3.2.xsd
       	http://www.springframework.org/schema/data/jpa 
       	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd 
       	http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
	
	<import resource="security-context.xml"/>
	<import resource="mongodb-context.xml"/>
	
	<mvc:annotation-driven />
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="id.smarta.five.home.HomeInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	
	<jpa:repositories base-package="id.smarta.five" entity-manager-factory-ref="sessionFactory"/>
	
	<context:property-placeholder location="classpath*:properties/configuration.properties" />
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>
	
	<mvc:annotation-driven />
	
	<!-- Scans within the base package of the application for @Components to 
		configure as beans @Controller, @Service, @Configuration, etc. -->
	<context:component-scan base-package="id.smarta" />
	<context:annotation-config />
	
	<bean id="sessionFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="id.smarta.five" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="${persistence.dialect}" />
			</bean>
		</property>
	</bean>
	
	<!--  
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/LocalJwDB"/>
    </bean>
	-->
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver.className}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="removeAbandoned" value="true"/>
	   	<property name="initialSize" value="5" />
	   	<property name="maxActive" value="20" />
	   	<property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>
	   	<property name="validationQuery" value="SELECT 1 FROM DUAL" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
	<task:annotation-driven />
	<task:scheduler id="threadPoolTaskScheduler" pool-size="50"/>
	
	<bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor">
        <property name="concurrencyLimit" value="100" />
    </bean>
    
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	    <property name="registerDefaultFormatters" value="false" />
	    <property name="formatters">
	    <set>
	        <bean class="org.springframework.format.number.NumberFormatAnnotationFormatterFactory" />
	    </set>
	    </property>
	</bean>
    
    <bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1048576" /> 
    </bean>
    
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="mail.smarta.id" />
		<property name="port" value="25" />
		<property name="username" value="sflow@smarta.id" />
		<property name="password" value="3Nengtri" />
		
		<property name="javaMailProperties">
			<props>
            	<prop key="mail.smtp.auth">true</prop>
            	<prop key="mail.smtp.starttls.enable">true</prop>
            	<prop key="mail.smtp.ssl.trust">*</prop>
        	</props>
		</property>
	</bean>
	<bean id="mailService" class="com.rabia.mail.service.impl.MailServiceImpl">
		<property name="mailSender" ref="mailSender" />
		<property name="taskExecutor" ref="taskExecutor" />
	</bean>
	
	<!-- Scheduler -->  
    <bean id="schedulerManager" class="id.smarta.five.scheduler.service.SchedulerManager" init-method="initManager">
    	<property name="schedulerFactory" ref="schedulerFactory"/>
    	<property name="schedulerJobListener" ref="schedulerJobListener"/>
    	<property name="schedulerDetailRepository" ref="schedulerDetailRepository"/>
    </bean>
    
    <bean id="schedulerJobListener" class="id.smarta.five.scheduler.service.SchedulerJobListener">
    	<property name="schedulerLogRepository" ref="schedulerLogRepository"/>
    </bean>
    
    <bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
		<property name="autoStartup" value="true" />
		<property name="waitForJobsToCompleteOnShutdown" value="true" />

		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">fiveNonClusterScheduler</prop>
				<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.scheduler.interruptJobsOnShutdown">true</prop>
				<prop key="org.quartz.scheduler.interruptJobsOnShutdownWithWait">true</prop>

				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
				
				<!--Job Store -->
				<prop key="org.quartz.jobStore.driverDelegateClass">${quartz.jobStore.driverDelegateClass}</prop>
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
				<prop key="org.quartz.jobStore.isClustered">true</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
				
				<!-- DataSource -->
				<prop key="org.quartz.jobStore.dataSource">quartzDS</prop>
				
				<!--  
				<prop key="org.quartz.dataSource.quartzDS.URL">jdbc:mysql://localhost:3306/sflowdb?characterEncoding=UTF-8</prop>
				<prop key="org.quartz.dataSource.quartzDS.driver">com.mysql.jdbc.Driver</prop>
				<prop key="org.quartz.dataSource.quartzDS.user">root</prop>
				<prop key="org.quartz.dataSource.quartzDS.password">password</prop>
				<prop key="org.quartz.dataSource.quartzDS.maxConnections">5</prop>
				<prop key="org.quartz.dataSource.quartzDS.validationQuery">select 0 from dual</prop>
				-->
				
				<prop key="org.quartz.dataSource.quartzDS.URL">${quartzDS.URL}</prop>
				<prop key="org.quartz.dataSource.quartzDS.driver">${quartzDS.driver}</prop>
				<prop key="org.quartz.dataSource.quartzDS.user">${quartzDS.user}</prop>
				<prop key="org.quartz.dataSource.quartzDS.password">${quartzDS.password}</prop>
				<prop key="org.quartz.dataSource.quartzDS.maxConnections">${quartzDS.maxConnections}</prop>
				<prop key="org.quartz.dataSource.quartzDS.validationQuery">${quartzDS.validationQuery}</prop>
			</props>
		</property>
	</bean>
    <!-- END OF SCHEDULER -->
	
</beans>